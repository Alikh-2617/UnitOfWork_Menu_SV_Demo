// <auto-generated />
using System;
using DAL.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Doman.Models.Category.BreakFast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Day1");

                    b.ToTable("BreakFasts");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.DaysMenu", b =>
                {
                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Day");

                    b.ToTable("DaysMenu");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dessert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Day1");

                    b.ToTable("Desserts");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dinner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Day1");

                    b.ToTable("Dinner");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21671386-f42a-4642-9e48-add0ab44f363"),
                            Created = new DateTime(2023, 4, 27, 14, 17, 20, 935, DateTimeKind.Local).AddTicks(2206),
                            Discription = " ssss",
                            Name = "dd"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Drink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DaysMenuDay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DaysMenuDay");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Lunch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Day1");

                    b.ToTable("Lunch");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8c0ccbb-fc6f-4466-abaa-0a497b9c0e62"),
                            Create = new DateTime(2023, 4, 27, 14, 17, 20, 935, DateTimeKind.Local).AddTicks(2380),
                            Discription = "ssss",
                            Name = "sssss"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Soda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DaysMenuDay")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DaysMenuDay");

                    b.ToTable("Sodas");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.BreakFast", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", "Day")
                        .WithMany("BreakFasts")
                        .HasForeignKey("Day1");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dessert", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", "Day")
                        .WithMany("Desserts")
                        .HasForeignKey("Day1");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dinner", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", "Day")
                        .WithMany("Dinners")
                        .HasForeignKey("Day1");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Drink", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", null)
                        .WithMany("Drinks")
                        .HasForeignKey("DaysMenuDay");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Lunch", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", "Day")
                        .WithMany("Lunches")
                        .HasForeignKey("Day1");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Soda", b =>
                {
                    b.HasOne("DAL.Doman.Models.Category.DaysMenu", null)
                        .WithMany("Sodas")
                        .HasForeignKey("DaysMenuDay");
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.DaysMenu", b =>
                {
                    b.Navigation("BreakFasts");

                    b.Navigation("Desserts");

                    b.Navigation("Dinners");

                    b.Navigation("Drinks");

                    b.Navigation("Lunches");

                    b.Navigation("Sodas");
                });
#pragma warning restore 612, 618
        }
    }
}
