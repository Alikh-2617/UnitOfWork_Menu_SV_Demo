// <auto-generated />
using System;
using DAL.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Doman.Models.Category.BreakFast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BreakFasts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7af782a6-6438-4ff7-a937-100284e85dbc"),
                            Create = new DateTime(2023, 5, 16, 17, 50, 39, 275, DateTimeKind.Local).AddTicks(3218),
                            Description = "ssss",
                            Name = "sssss"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dessert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Desserts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85f05a5c-7806-4e22-a148-5392e3db8e1f"),
                            Create = new DateTime(2023, 5, 16, 17, 50, 39, 275, DateTimeKind.Local).AddTicks(3233),
                            Description = "ssss",
                            Name = "sssss"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Dinner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dinner");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87f9365e-06d4-47d5-88e1-e3c40050e1ec"),
                            Created = new DateTime(2023, 5, 16, 17, 50, 39, 275, DateTimeKind.Local).AddTicks(3044),
                            Discription = " ssss",
                            Name = "dd"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Drink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("413dd321-f897-4d31-aa28-4bf8137e8291"),
                            Name = "sssss",
                            Size = "10"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Lunch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Lunch");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4278dd2-b675-4dde-bd07-a6b10ca6eed2"),
                            Create = new DateTime(2023, 5, 16, 17, 50, 39, 275, DateTimeKind.Local).AddTicks(3198),
                            Description = "ssss",
                            Name = "sssss"
                        });
                });

            modelBuilder.Entity("DAL.Doman.Models.Category.Soda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sodas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85155d52-e441-4123-8083-6bb86f2e8610"),
                            Name = "sssss",
                            Size = "10"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
